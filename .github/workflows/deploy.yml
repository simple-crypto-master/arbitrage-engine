name: 🔄 Arbitrage Engine Deployment

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🔐 Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 🏗️ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/arbitrage-engine:latest
          ghcr.io/${{ github.repository_owner }}/arbitrage-engine:${{ github.sha }}

    - name: 🚀 Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "🚀 Starting arbitrage-engine deployment..."

          # Login to GHCR
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # Pull latest image
          docker pull ghcr.io/${{ github.repository_owner }}/arbitrage-engine:latest

          # Stop existing container
          docker stop arbitrage-engine || echo "Container not running"
          docker rm arbitrage-engine || echo "Container not found"

          # Start new container
          docker run -d \
            --name arbitrage-engine \
            --network mansa-musa-network \
            --restart unless-stopped \
            --expose 8002 \
            --expose 50053 \
            -e DATABASE_URL='postgresql://jkvuky:rUSWdvUBI2E3HyfQws@sk417178-002.eu.clouddb.ovh.net:35412/crypto' \
            -e REDIS_URL=redis://redis:6379 \
            ghcr.io/${{ github.repository_owner }}/arbitrage-engine:latest

          echo "✅ Arbitrage Engine deployment complete!"
